name: Build Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]  # Also trigger on release creation
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Windows executable
      run: |
        pyinstaller cyberdriver.spec
    
    - name: Upload Windows executable
      uses: actions/upload-artifact@v3
      with:
        name: cyberdriver-windows
        path: dist/cyberdriver.exe
    
    # Upload to release if this is a release event
    - name: Upload to Release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: dist/cyberdriver.exe
        asset_name: cyberdriver-windows.exe
        asset_content_type: application/octet-stream
  
  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build macOS executable
      run: |
        pyinstaller cyberdriver.spec
    
    - name: Upload macOS executable
      uses: actions/upload-artifact@v3
      with:
        name: cyberdriver-macos
        path: dist/cyberdriver
    
    # Upload to release if this is a release event
    - name: Upload to Release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: dist/cyberdriver
        asset_name: cyberdriver-macos
        asset_content_type: application/octet-stream 